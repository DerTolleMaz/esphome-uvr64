esphome:
  name: uvr64_dlbus
esp8266:
  board: d1_mini

external_components:

  - source:
      type: git
      url: https://github.com/DerTolleMaz/esphome-uvr64
      ref: component
    components: [uvr64_dlbus]
logger:

external_components:
  - source:
      type: git
      url: https://github.com/DerTolleMaz/esphome-uvr64
      ref: main
    components: [uvr64_dlbus]
    refresh: always
globals:
  - id: dlbus_ptr
    type: esphome::uvr64_dlbus::DLBusSensor*
    restore_value: no
    initial_value: 'nullptr'
    #includes: ["uvr64_dlbus/dlbus_sensor.h"]
# Sensoren deklarieren
sensor:
  - platform: template
    name: "UVR64 Solarthermie"
    id: temp0
  - platform: template
    name: "UVR64 Solarthermie Boiler"
    id: temp1
  - platform: template
    name: "UVR64 Solarthermie Puffer Unten"
    id: temp2
  - platform: template
    name: "UVR64 Solarthermie Pool Waermetauscher"
    id: temp3
  - platform: template
    name: "UVR64 Heizung Pool Waermetauscher"
    id: temp4
  - platform: template
    name: "UVR64 Solarthermie Puffer Oben"
    id: temp5

binary_sensor:
  - platform: template
    name: "UVR64 Relay Boiler"
    id: relay0
  - platform: template
    name: "UVR64 Relay Puffer"
    id: relay1
  - platform: template
    name: "UVR64 Relay Solarthermie Pool Waermetauscher"
    id: relay2
  - platform: template
    name: "UVR64 Relay Heizung Pool Waermetauscher"
    id: relay3

# DL-Bus-Komponente
uvr64_dlbus:
  id: uvr
  pin: D2
  temp_sensors:
    - temp0
    - temp1
    - temp2
    - temp3
    - temp4
    - temp5
  relay_sensors:
    - relay0
    - relay1
    - relay2
    - relay3
interval:
  - interval: 1s
    then:
      - lambda: |-
          if (id(dlbus_ptr) == nullptr) {
            auto dl = new esphome::uvr64_dlbus::DLBusSensor(id(uvr)->get_pin());
            dl->set_temp_sensor(0, id(temp0));
            dl->set_temp_sensor(1, id(temp1));
            dl->set_temp_sensor(2, id(temp2));
            dl->set_temp_sensor(3, id(temp3));
            dl->set_temp_sensor(4, id(temp4));
            dl->set_temp_sensor(5, id(temp5));
            dl->set_relay_sensor(0, id(relay0));
            dl->set_relay_sensor(1, id(relay1));
            dl->set_relay_sensor(2, id(relay2));
            dl->set_relay_sensor(3, id(relay3));
            id(dlbus_ptr) = dl;
            App.register_component(dl);
          }

